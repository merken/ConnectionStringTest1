using System;
using System.IO;
using ConnectionStringTest1.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Logging.Console;

namespace ConnectionStringTest1
{
    class Program
    {
        public static  ILoggerFactory loggerFactory
            = new LoggerFactory(new[] { new ConsoleLoggerProvider((category, level) => category.Contains("Command") && level == LogLevel.Information, true) });

        static void Main(string[] args)
        {
            var builder = new ConfigurationBuilder()
                .SetBasePath(Directory.GetCurrentDirectory())
                .AddJsonFile("appsettings.json");

            var configuration = builder.Build();
            var connectionString = configuration.GetConnectionString("MyDb");

            var options = new DbContextOptionsBuilder<MyContext>()
                    .UseSqlServer(connectionString)
                    .UseLoggerFactory(loggerFactory) //Optional, this logs SQL generated by EF Core to the Console
                    .Options;

            using (var context = new MyContext(options))
            {
                //This also works, SqlServer is also used as Db Provider
                //No inheritence required!
            }

            using (var context = new MyDbContext(connectionString))
            {
                //This works, SqlServer is used as Db Provider
            }
        }
    }
}
